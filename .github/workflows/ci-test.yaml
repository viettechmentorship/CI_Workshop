name: VTMP CI/CD Pipeline Demo
on:
  pull_request:
    branches:
      - "**"

jobs:
  front-end-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front-end
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
      
      - name: Run lint
        run: npm run lint

      - name: Run tests with coverage
        run: | 
          npx jest --coverage --json --outputFile=jest-results.json

      - name: Generate Markdown comment
        run: node ../scripts/jest-to-md.js

      - name: Check PR Changes
        id: pr-changes
        run: echo "changes=${{ toJson(github.event.pull_request.changed_files) }}"

      - name: Create Comment
        if: steps.pr-changes.outputs.changes != '[]'
        run: |
          # Use GitHub API to create a comment on the PR
          PR_NUMBER=${{ github.event.pull_request.number }}
          COMMENT=$(cat jest-comment.md)
          GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
          COMMENT_URL="https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"

          curl -s -H "Authorization: token ${GITHUB_TOKEN}" -X POST $COMMENT_URL -d "{\"body\":\"$COMMENT\"}"


  back-end-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back-end
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
